@model HRandPayrollSystemModel.DBModel.tblEmployeeSalary

@{
    ViewBag.Title = "Employee Salary";
}

@using (@Html.BeginForm("Save", "Salary", FormMethod.Post, new { @id = "myform", enctype = "multipart/form-data" }))
{
    if (Model.SalaryID > 0)
    {
        if (Model.IsView)
        {
            ViewBag.Title = ViewBag.Title + " View";
        }
        else
        {
            ViewBag.Title = ViewBag.Title + " Edit";
        }

    }
    else
    {

        ViewBag.Title = ViewBag.Title + " Create";

    }

    <header class="page-header">
        <h2>@ViewBag.Title</h2>
        <div class="right-wrapper pull-right">
            <ol class="breadcrumbs">
                <li>
                    <a href="~/home/index">
                        <i class="fa fa-home"></i>
                    </a>
                </li>
                <li><span>Setup</span></li>
                <li><span>@ViewBag.Title</span></li>
            </ol>
            <a class="sidebar-right-toggle" data-open="sidebar-right"><i class="fa fa-chevron-left"></i></a>
        </div>
    </header>


    <div class="panel">
        <!-- start: page -->
        <div class="row">
            <div class="col-md-12">

                <section class="panel">
                    <header class="panel-heading">
                        <div class="panel-actions">
                            <a href="#" class="fa fa-caret-down"></a>
                            <a href="#" class="fa fa-times"></a>
                        </div>
                        <h2 class="panel-title">EmployeeType Info</h2>
                        <p class="panel-subtitle">
                            Form control for input EmployeeType data .
                        </p>
                    </header>
                    <div class="panel-body">

                        @Html.HiddenFor(model => model.SalaryID)


                        <div class="form-group">
                            <label class="col-sm-3 control-label">Department <span class="required">*</span></label>
                            <div class="col-sm-6 ">
                                @Html.DropDownListFor(model => model.DepartmentID, new HRandPayrollSystemModel.DBModel.tblEmployee().loadDepartment(Convert.ToInt32( new SAGERPNEW2018. Models.SystemLogin().GetUser().ProjectIDs)), new { @class = "form-control selectpicker ", @required = "required", @onchange = "loadEmployee()" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Employee <span class="required">*</span></label>
                            <div class="col-sm-6 ">
                                @Html.DropDownListFor(model => model.EmployeeID, Model.loadEmployee(Model.DepartmentID, Convert.ToInt32( new SAGERPNEW2018.Models.SystemLogin().GetUser().ProjectIDs)), new { @class = "form-control selectpicker ", @required = "required", })
                            </div>
                        </div>
                       
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Bank <span class="required">*</span></label>
                            <div class="col-sm-6 ">
                                @Html.DropDownListFor(model => model.BankID, new HRandPayrollSystemModel.DBModel.tblEmployee ().loadBanks(), new { @class = "form-control selectpicker ", @required = "required", })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label">Account Title<span class="required">*</span></label>
                            <div class="col-sm-6 ">
                                @Html.TextBoxFor(model => model.AccountTitle, new { @class = "form-control" })
                         </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label">Account No <span class="required">*</span></label>
                            <div class="col-sm-6 ">
                                @Html.TextBoxFor(model => model.AccountNo, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-sm-3 control-label">Gross Salary<span class="required">*</span></label>
                            <div class="col-sm-6 ">
                                @Html.TextBoxFor(model => model.GrossSalary, new { @class = "form-control number", @required = "required" })
                            </div>
                        </div>
                  

                        <div class="form-group">
                            <label class="col-sm-3 control-label">InActive<span class="required">*</span></label>
                            <div class="col-sm-9 ">
                                @Html.CheckBoxFor(model => model.Inactive)
                                @*<input id="Inactive" name="Inactive" type="checkbox" value="@Model.Inactive" />*@
                            </div>
                        </div>


                    </div>
                    <footer class="panel-footer">
                        <div class="row">
                            <div class="col-sm-9">
                                <button type="button" onclick="postform()" class="btn btn-primary">Save</button>
                                <button type="button" id="cancelll" class="btn btn-default" onclick="window.history.back()">Cancel</button>
                            </div>
                        </div>
                    </footer>
                </section>
            </div>
        </div>
    </div>

}


<script>




    function postform() {
        var ReturnValue = true



        $("#myform").validate();



        var Data = { Name: $('#EmployeeID').val(), ID: $("#SalaryID").val() }
        $.ajax({
            async: false,
            url: "/Salary/Duplicate",
            data: Data,
            success: function (data) {

                var c =JSON.parse(data);
                if (c!="") {
                    bootbox.alert(c)
                    ReturnValue = false;
                }
            },
            error: function () {
                ReturnValue = false;
                bootbox.alert("Error")
            }
        })


        bootbox.confirm("Are sure to save data!", function (result) {
            if (result) {
                if (ReturnValue) {
                    $("#myform").submit();

                }

            }
        });


    }
    $(document).ready(function () {
       // $('#Myform :input').select()

        $('.selectpicker').selectpicker('selectAll');

        if ('@Model.IsView' == 'True') {
            $('#myform :input').attr('disabled', true);
            $('#cancelll').attr('disabled', false);

        }

    });




    function loadEmployee() {
    
        if ($('#DepartmentID').val() == "0") {

            var employee = $('#EmployeeID');
            employee.empty();
            employee.selectpicker('refresh');
            return;
        }


        var Data = { id: $('#DepartmentID').val() }

        $.ajax({
            async: false,
            url: "/Salary/loadEmployeeBydepartment",
            data: Data,
            success: function (data) {

                if (data != null) {

                    var employee = $('#EmployeeID');
                    employee.empty();
                    console.log(data)
                    $.each(data,
                        function (index, item) {
                            var datafil = new Option(item.Text, item.Value);
                            employee.append(datafil);
                        });

                    employee.selectpicker('refresh');

                    employee.selectpicker({
                        liveSearch: true,
                        size: 10,

                        // width: 'auto',
                        container: "body"
                    });



                }
            },
            error: function () {
                ReturnValue = false;

            }
        })

    }




</script>




