@model SAGERPNEW2018.Models.ReportModel


@{
    ViewBag.Title = "Minutes Report Status Wise";
}

<style>
    .no-js #loader {
        display: block;
    }

    .js #loader {
        display: block;
        position: absolute;
        left: 100px;
        top: 0;
    }

    .se-pre-con {
        position: fixed;
        left: 0px;
        top: 0px;
        width: 100%;
        height: 100%;
        z-index: 9999;
        opacity: 70%;
        background: url(../../AppFiles/Preloader_1.gif) center no-repeat #fff;
    }
</style>

@Html.Partial("_minuteGudie")
<div id="modals"></div>
<header class="page-header">
    <h2 id="headtitle">@ViewBag.Title</h2>
    <div class="right-wrapper pull-right">
        <ol class="breadcrumbs">
            <li>
                <a href="~/home/index">
                    <i class="fa fa-home" style="color:chartreuse;"></i>
                </a>
            </li>
            <li>
                <a style="color: chartreuse;" href="/Eminute/create">
                    Create E-Minute      @*<i class="fa fa-home"></i>*@
                </a>
            </li>
            <li>
                <a style="color: chartreuse;" href="/Eminute/AllMinutesReport">
                    Report      @*<i class="fa fa-home"></i>*@
                </a>
            </li>
            <li>
                <a href="#" onclick="showInstruction()" style="color: chartreuse;">
                    <i class="fa fa-info-circle"></i>      E-Minute Guideline
                </a>
            </li>
        </ol>
        <a class="sidebar-right-toggle" data-open="sidebar-right"><i class="fa fa-chevron-left"></i></a>
    </div>
</header>
<!-- start: page -->
<section class="panel">
    <header class="panel-heading">
        <div class="panel-actions">
            <a href="#" class="fa fa-caret-down"></a>
            <a href="#" class="fa fa-times"></a>
        </div>
        <h2 class="panel-title">All @ViewBag.Title Data</h2>
    </header>
    <div class="panel-body">
        @if (TempData["ActionMessage"] != null)
        {
            if (Convert.ToBoolean(TempData["ActionMessage"]))
            {
                <div class="row">
                    <div class="col-md-12">
                        <div class="alert alert-success">
                            <strong>Success!</strong> Record Save Successfully .
                        </div>
                    </div>
                </div>

            }
            else
            {
                <div class="row">
                    <div class="col-md-12">
                        <div class="alert alert-danger">
                            <strong>Error!</strong> Record Save Error .
                        </div>
                    </div>
                </div>
            }
        }
        <div class="form-group">

            <div class="col-sm-2 " >
                <strong> From Date</strong>
                <input type="text" id="fromdate" class="form-control uneditable-input" style="font-size: small;padding: 8px;" />
            </div>
            <div class="col-sm-2 ">
                <strong> To Date</strong>
                <input type="text" id="Todate" class="form-control uneditable-input" style="font-size: small;padding: 8px;" />
            </div>

            <div class="col-sm-2 " >
                <strong>Department</strong>
                <select class="form-control selectpicker" id="Department" name="Department" style="font-size: small;padding: 1px;">
                    @{
                        var department = new HRandPayrollSystemModel.DBModel.tblEmployee().loadDepartment(Convert.ToInt32(new SAGERPNEW2018.Models.SystemLogin().GetUser().ProjectIDs)).OrderBy(x => x.Text).ToList();
                        @*<option value="0" name="">--All--</option>*@
                    foreach (var item in department)
                    {

                        <option value="@item.Value" name="">@item.Text</option>



                    }


                    }

                </select>
            </div>

            <div class="col-sm-2 " >
                <strong>Type</strong>
                <select class="form-control selectpicker" id="Type" name="Type" style="font-size: small;padding: 1px;" onchange="loadSubtype()">
                    @{
                        var typeminute = new HRandPayrollSystemModel.DBModel.tblEminuteType().getAlldata().OrderBy(x => x.MinuteType).OrderBy(x => x.MinuteType).ToList();
                        <option value="0" name="">--All--</option>
                        foreach (var item in typeminute)
                        {

                            <option value="@item.MinuteTypeID" name="">@item.MinuteType</option>



                        }


                    }

                </select>
            </div>





            <div class="col-sm-2"   >
                <strong>Status</strong>
                <select class="form-control selectpicker" data-style="btn-warning" id="statsuid" name="statsuid" style="font-size: large;padding: 1px;">

               
                    <option value="Pending" name="">Pending</option>
                    <option value="Approved" name="">Approved</option>
                    <option value="Complete" name="">Completed</option>
                   

                </select>
            </div>
            <div class="col-md-2 " style="top: -5px;">
                <a type="button" class="btn btn-success btn-sm" style="margin-top:28px" onclick="loadminutes()"> View Report </a>
              </div>
                  @* <button type="button" class="btn btn-info btn-sm" style="width: 100%;height: 148px;"></button>*@

            </div>

        <div class="row" style="display:none">
            <div class="col-sm-6">
                <div class="mb-md">
                    @if (Model.IsNew)
                    {
                        <button type="button" id="Add" onclick="add()" class="btn btn-primary"> <i class="fa fa-plus"></i> Add New</button>
                        @* <button type="button" id="cancelll" onclick="window.history.back()" class="btn btn-primary">Cancel</button>*@
                    }
                </div>
            </div>
        </div>

        <div id="loadingid" style="display:none" class="se-pre-con"></div>
        @*addTable Here*@
        <table class="table table-bordered mb-none table-hover" id="UserTable">
            <thead>
                <tr  class="bg-primary">
                    <th style="width:20px">S/N</th>
                    <th style="width:60px"> <span id="na">Minute Code</span></th>
                    <th style="width:80px">Department </th>
                    <th style="width:200px">Forward Status </th>
                    <th style="width:200px">Subject </th>
                    <th style="width:80px">Initiated Date </th>
                    <th style="width:75px">Status Date </th>
                    <th style="width:40px">Amount </th>
                    <th style="width:30px">Days </th>

                   
                   
                </tr>
            </thead>
            <tbody id="ProductTableID"></tbody>
        </table>
    </div>
</section>

<script>

    $(document).ready(function () {
        $("#ProductTableID").on('click', 'tr', function (e) {
            if ($(this).children().first().next().text() != "") {
                //console.log($(this).children().first().next().text());
                ViewMinute($(this).children().first().next().text());
            }
        });



        $("#fromdate").datepicker({
            format: "dd-M-yyyy",
            autoclose: true,
            todayBtn: true,


        });
       // var DateofP = '01' + '/' + '09' + '/' + '2020';
        var DateofP = '01' + '/' + new Date().getMonth()  + '/' + new Date().getFullYear();
        //$('#fromdate').datepicker('setDate', DateofP);
        $('#fromdate').datepicker('setDate', DateofP);
        $("#Todate").datepicker({
            format: "dd-M-yyyy",
            autoclose: true,
            todayBtn: true,


        });
        // var DateofP2 = this.getDate().toString() + '/' + '05' + '/' + '2020';
        $('#Todate').datepicker('setDate', new Date());



        $("#modals").load('/CustomClasses/IndexModaling.html')

        $("#UserTable").dataTable(
             {
        "aoColumns": [{ "bSearchable": false }, { "bSearchable": true }, { "bSearchable": true }, { "bSearchable": true }, { "bSearchable": true }, { "bSearchable": true }, { "bSearchable": true }, { "bSearchable": true }, { "bSearchable": true }],
                 "bSort": true,

                 dom: 'Bfrtip',
                 pageLength: 50,
                 buttons: []
                 

             })
    })

    function loadminutes() {
        $('#loadingid').show();
        debugger
        var Data = { QuryStatus: $('#statsuid').val(), fromdate: $('#fromdate').val(), todate: $("#Todate").val(), deptid: $("#Department").val(), typeid: $("#Type").val() }
        $.ajax({
            async: true,
    
            url: "/MinuteReporting/StatusCheckWise",
            data: Data,
            success: function (Response) {

                if (Response != null) {

                    console.log(Response)


                    var data = JSON.parse(Response)

                 

                    if (data != '') {


                        $("#UserTable").DataTable().clear();

                        var html = '';
                        for (var i = 0; i < data.length; i++) {
                      
                        
                            $('#UserTable').DataTable(

                                ).row.add([
                                 (i + 1),
                                 data[i]["MinuteCode"],
                                 data[i]["Department"],
                                 data[i]["ForwardStatus"],
                                 data[i]["Subject"],
                                 data[i]["InitiatedDate"],
                                 data[i]["StatusDate"],
                                 data[i]["Amount"].toLocaleString(),
                                 data[i]["datedays"] ]).draw();

                        }
                    }

                    else {

                        $('#ProductTableID').html('');
                    }

                }
            },
            complete: function () {
                $('#loadingid').hide();
            },
            error: function () {
                ReturnValue = false;

            }
        })



    }

    function ViewMinute(elment0) {


      //  window.location.href = "/Eminute/pendminuteLoadEdit/" + elment0


        window.open('/Eminute/pendminuteLoadEdit/' + elment0, '_blank');
    }


    function loadSubtype() {
        debugger

        if ($('#Type').val() == "0") {

            var TypeSub = $('#Subtype');
            TypeSub.empty();
            TypeSub.append(new Option("-- All--", "0"));

            TypeSub.selectpicker('refresh');

            return;
        }


        var Data = { type: $('#Type').val() }

        $.ajax({
            async: false,
            url: "/Eminute/getSubtype",
            data: Data,
            success: function (data) {

                if (data != null) {

                    var TypeSub = $('#Subtype');
                    TypeSub.empty();

                    $('#Subtype').append(new Option("-- All--", "0"));
                    $.each(data,
                        function (index, item) {
                            var datafil = new Option(item.Text, item.Value);
                            TypeSub.append(datafil);
                        });

                    TypeSub.selectpicker('refresh');

                    TypeSub.selectpicker({
                        liveSearch: true,
                        size: 10,

                        // width: 'auto',
                        container: "body"
                    });



                }
            },
            error: function () {
                ReturnValue = false;

            }
        })



    }
    function showInstruction() {


        $('#myModal').modal();
    }


</script>




