//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HRandPayrollSystemModel.DBModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HRandPayrollDBEntities : DbContext
    {
        public HRandPayrollDBEntities()
            : base("name=HRandPayrollDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AllowancesDeduction> AllowancesDeductions { get; set; }
        public virtual DbSet<BankInformation> BankInformations { get; set; }
        public virtual DbSet<CityInformtion> CityInformtions { get; set; }
        public virtual DbSet<Employeearrier> Employeearriers { get; set; }
        public virtual DbSet<EmployeearrierDetail> EmployeearrierDetails { get; set; }
        public virtual DbSet<EmployeeDocumentDetail> EmployeeDocumentDetails { get; set; }
        public virtual DbSet<EmployeeEducationDetail> EmployeeEducationDetails { get; set; }
        public virtual DbSet<EmployeeExprienceDetail> EmployeeExprienceDetails { get; set; }
        public virtual DbSet<EmployeeNomineeDetail> EmployeeNomineeDetails { get; set; }
        public virtual DbSet<EmployeePlacement> EmployeePlacements { get; set; }
        public virtual DbSet<EmployeePlacementAllowancesDetail> EmployeePlacementAllowancesDetails { get; set; }
        public virtual DbSet<EmployeePlacementDeductionDetail> EmployeePlacementDeductionDetails { get; set; }
        public virtual DbSet<EmployeeType> EmployeeTypes { get; set; }
        public virtual DbSet<GLUserGroup> GLUserGroups { get; set; }
        public virtual DbSet<GLUserGroupDetail> GLUserGroupDetails { get; set; }
        public virtual DbSet<GradeEmployee> GradeEmployees { get; set; }
        public virtual DbSet<LogEmployeePlacementAllowancesDetail> LogEmployeePlacementAllowancesDetails { get; set; }
        public virtual DbSet<LogEmployeePlacementDeductionDetail> LogEmployeePlacementDeductionDetails { get; set; }
        public virtual DbSet<MonthlyDeduction> MonthlyDeductions { get; set; }
        public virtual DbSet<MonthlyDeductionDetail> MonthlyDeductionDetails { get; set; }
        public virtual DbSet<ProjectActivityLog> ProjectActivityLogs { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TaxConfiguration> TaxConfigurations { get; set; }
        public virtual DbSet<TaxConfigurationDetail> TaxConfigurationDetails { get; set; }
        public virtual DbSet<tbl_PettyCashInfo> tbl_PettyCashInfo { get; set; }
        public virtual DbSet<tblCompany> tblCompanies { get; set; }
        public virtual DbSet<tblDepartment> tblDepartments { get; set; }
        public virtual DbSet<tblDesignation> tblDesignations { get; set; }
        public virtual DbSet<tblEminuteBudgetDetail> tblEminuteBudgetDetails { get; set; }
        public virtual DbSet<tblEminuteBudgetDetail_old> tblEminuteBudgetDetail_old { get; set; }
        public virtual DbSet<tblEminuteDocDetail> tblEminuteDocDetails { get; set; }
        public virtual DbSet<tblEminuteInfo> tblEminuteInfoes { get; set; }
        public virtual DbSet<tblEminutePettyCashDetail> tblEminutePettyCashDetails { get; set; }
        public virtual DbSet<tblEminuteSubType> tblEminuteSubTypes { get; set; }
        public virtual DbSet<tblEminuteType> tblEminuteTypes { get; set; }
        public virtual DbSet<tblEmployee> tblEmployees { get; set; }
        public virtual DbSet<tblEmployeeLoan> tblEmployeeLoans { get; set; }
        public virtual DbSet<tblEmployeeLoanCashDetail> tblEmployeeLoanCashDetails { get; set; }
        public virtual DbSet<tblEmployeeSalary> tblEmployeeSalaries { get; set; }
        public virtual DbSet<tblEmployeeTransfer> tblEmployeeTransfers { get; set; }
        public virtual DbSet<tblFavorite> tblFavorites { get; set; }
        public virtual DbSet<tblIONDocDetail> tblIONDocDetails { get; set; }
        public virtual DbSet<tblIonInfo> tblIonInfoes { get; set; }
        public virtual DbSet<tblProject> tblProjects { get; set; }
        public virtual DbSet<tblProjectService> tblProjectServices { get; set; }
        public virtual DbSet<tblSalaryGeneration> tblSalaryGenerations { get; set; }
        public virtual DbSet<tblSalaryGenerationDetail> tblSalaryGenerationDetails { get; set; }
        public virtual DbSet<tempEminuteInfo> tempEminuteInfoes { get; set; }
        public virtual DbSet<tempIonInfo> tempIonInfoes { get; set; }
        public virtual DbSet<UserForm> UserForms { get; set; }
        public virtual DbSet<tblTypeLoan> tblTypeLoans { get; set; }
        public virtual DbSet<tbl_BoardProceeding> tbl_BoardProceeding { get; set; }
        public virtual DbSet<tbl_BoardProceedingDOC> tbl_BoardProceedingDOC { get; set; }
        public virtual DbSet<tempBoardSheetInfo> tempBoardSheetInfoes { get; set; }
        public virtual DbSet<GLUser> GLUsers { get; set; }
        public virtual DbSet<tblEminuteEditlog> tblEminuteEditlogs { get; set; }
        public virtual DbSet<tbl_kplinfo> tbl_kplinfo { get; set; }
    
        [DbFunction("Entities", "UDFSplit")]
        public virtual IQueryable<UDFSplit_Result> UDFSplit(string rowData, string splitOn)
        {
            var rowDataParameter = rowData != null ?
                new ObjectParameter("RowData", rowData) :
                new ObjectParameter("RowData", typeof(string));
    
            var splitOnParameter = splitOn != null ?
                new ObjectParameter("SplitOn", splitOn) :
                new ObjectParameter("SplitOn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<UDFSplit_Result>("[Entities].[UDFSplit](@RowData, @SplitOn)", rowDataParameter, splitOnParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_CheckForEditForiNFo(Nullable<int> eMPID, Nullable<int> mit)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            var mitParameter = mit.HasValue ?
                new ObjectParameter("mit", mit) :
                new ObjectParameter("mit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_CheckForEditForiNFo", eMPIDParameter, mitParameter);
        }
    
        public virtual ObjectResult<sp_CheckForEditForiNFo2_Result> sp_CheckForEditForiNFo2(Nullable<int> eMPID, Nullable<int> mit)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            var mitParameter = mit.HasValue ?
                new ObjectParameter("mit", mit) :
                new ObjectParameter("mit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CheckForEditForiNFo2_Result>("sp_CheckForEditForiNFo2", eMPIDParameter, mitParameter);
        }
    
        public virtual ObjectResult<sp_CheckForEditForION_Result> sp_CheckForEditForION(Nullable<int> eMPID, Nullable<int> mit)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            var mitParameter = mit.HasValue ?
                new ObjectParameter("mit", mit) :
                new ObjectParameter("mit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CheckForEditForION_Result>("sp_CheckForEditForION", eMPIDParameter, mitParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_deleteEmployeePlacementAllowancesDetailByProjectID(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_deleteEmployeePlacementAllowancesDetailByProjectID", projectIDParameter);
        }
    
        public virtual ObjectResult<sp_departmentWiseSalariesMontly_Result> sp_departmentWiseSalariesMontly(Nullable<int> project)
        {
            var projectParameter = project.HasValue ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_departmentWiseSalariesMontly_Result>("sp_departmentWiseSalariesMontly", projectParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_eminuteActivity(Nullable<int> projectid, Nullable<int> employeid)
        {
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            var employeidParameter = employeid.HasValue ?
                new ObjectParameter("employeid", employeid) :
                new ObjectParameter("employeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_eminuteActivity", projectidParameter, employeidParameter);
        }
    
        public virtual int sp_eminutedetailwiseReport(string status, Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, string deptid, string type)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var deptidParameter = deptid != null ?
                new ObjectParameter("deptid", deptid) :
                new ObjectParameter("deptid", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_eminutedetailwiseReport", statusParameter, datefromParameter, datetoParameter, deptidParameter, typeParameter);
        }
    
        public virtual ObjectResult<sp_EminuteTodayactivitylog_Result> sp_EminuteTodayactivitylog(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EminuteTodayactivitylog_Result>("sp_EminuteTodayactivitylog", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_EmployeeAllForward_Result> sp_EmployeeAllForward()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EmployeeAllForward_Result>("sp_EmployeeAllForward");
        }
    
        public virtual ObjectResult<sp_EmployeeForwardFormint_Result> sp_EmployeeForwardFormint(Nullable<int> userID, Nullable<int> projectID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("projectID", projectID) :
                new ObjectParameter("projectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EmployeeForwardFormint_Result>("sp_EmployeeForwardFormint", userIDParameter, projectIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllApprovedMinute_Result> sp_getAllApprovedMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllApprovedMinute_Result>("sp_getAllApprovedMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllButtonnewStatus_Result> sp_getAllButtonnewStatus(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllButtonnewStatus_Result>("sp_getAllButtonnewStatus", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllButtonStatus_Result> sp_getAllButtonStatus(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllButtonStatus_Result>("sp_getAllButtonStatus", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllCancelMinute_Result> sp_getAllCancelMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllCancelMinute_Result>("sp_getAllCancelMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllCompApproved_Result> sp_getAllCompApproved(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllCompApproved_Result>("sp_getAllCompApproved", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllCompButtonnewStatus_Result> sp_getAllCompButtonnewStatus(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllCompButtonnewStatus_Result>("sp_getAllCompButtonnewStatus", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllCompButtonStatus_Result> sp_getAllCompButtonStatus(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllCompButtonStatus_Result>("sp_getAllCompButtonStatus", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllCompCancel_Result> sp_getAllCompCancel(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllCompCancel_Result>("sp_getAllCompCancel", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllCompCompleted_Result> sp_getAllCompCompleted(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllCompCompleted_Result>("sp_getAllCompCompleted", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllCompletedMinute_Result> sp_getAllCompletedMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllCompletedMinute_Result>("sp_getAllCompletedMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllCompNew_Result> sp_getAllCompNew(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllCompNew_Result>("sp_getAllCompNew", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllCompPending_Result> sp_getAllCompPending(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllCompPending_Result>("sp_getAllCompPending", eMPIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_getAllDataForTaxConfigAllowanceID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_getAllDataForTaxConfigAllowanceID");
        }
    
        public virtual ObjectResult<sp_getAllDepartments_Result> sp_getAllDepartments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllDepartments_Result>("sp_getAllDepartments");
        }
    
        public virtual ObjectResult<sp_getAllDesigination_Result> sp_getAllDesigination()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllDesigination_Result>("sp_getAllDesigination");
        }
    
        public virtual ObjectResult<sp_getAllDesiginationnew_Result> sp_getAllDesiginationnew(Nullable<int> projectid)
        {
            var projectidParameter = projectid.HasValue ?
                new ObjectParameter("projectid", projectid) :
                new ObjectParameter("projectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllDesiginationnew_Result>("sp_getAllDesiginationnew", projectidParameter);
        }
    
        public virtual ObjectResult<sp_getAllEmployeeData_Result> sp_getAllEmployeeData(string where)
        {
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllEmployeeData_Result>("sp_getAllEmployeeData", whereParameter);
        }
    
        public virtual ObjectResult<sp_getAllEmployeeforTransferSet_Result> sp_getAllEmployeeforTransferSet(Nullable<int> loginID)
        {
            var loginIDParameter = loginID.HasValue ?
                new ObjectParameter("LoginID", loginID) :
                new ObjectParameter("LoginID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllEmployeeforTransferSet_Result>("sp_getAllEmployeeforTransferSet", loginIDParameter);
        }
    
        public virtual ObjectResult<sp_GetAllemployeeSalaries_Result> sp_GetAllemployeeSalaries(string where)
        {
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetAllemployeeSalaries_Result>("sp_GetAllemployeeSalaries", whereParameter);
        }
    
        public virtual ObjectResult<sp_getAllEmployeewithDesignation_Result> sp_getAllEmployeewithDesignation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllEmployeewithDesignation_Result>("sp_getAllEmployeewithDesignation");
        }
    
        public virtual ObjectResult<sp_getAllForInfoMinute_Result> sp_getAllForInfoMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllForInfoMinute_Result>("sp_getAllForInfoMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllHoldMinute_Result> sp_getAllHoldMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllHoldMinute_Result>("sp_getAllHoldMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllION_Result> sp_getAllION(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllION_Result>("sp_getAllION", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllIONMinute_Result> sp_getAllIONMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllIONMinute_Result>("sp_getAllIONMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllIonToEdit_Result> sp_getAllIonToEdit(Nullable<int> empid, string code, Nullable<int> ty)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var tyParameter = ty.HasValue ?
                new ObjectParameter("ty", ty) :
                new ObjectParameter("ty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllIonToEdit_Result>("sp_getAllIonToEdit", empidParameter, codeParameter, tyParameter);
        }
    
        public virtual ObjectResult<sp_getAllMinutetoedit_Result> sp_getAllMinutetoedit(Nullable<int> empid, string code, Nullable<int> ty)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var tyParameter = ty.HasValue ?
                new ObjectParameter("ty", ty) :
                new ObjectParameter("ty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllMinutetoedit_Result>("sp_getAllMinutetoedit", empidParameter, codeParameter, tyParameter);
        }
    
        public virtual ObjectResult<sp_getAllMinutetoedit2_Result> sp_getAllMinutetoedit2(Nullable<int> empid, string code, Nullable<int> ty)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var tyParameter = ty.HasValue ?
                new ObjectParameter("ty", ty) :
                new ObjectParameter("ty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllMinutetoedit2_Result>("sp_getAllMinutetoedit2", empidParameter, codeParameter, tyParameter);
        }
    
        public virtual ObjectResult<sp_getAllNewMinute_Result> sp_getAllNewMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllNewMinute_Result>("sp_getAllNewMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllowancesEmployeePlacement_Result> sp_getAllowancesEmployeePlacement(Nullable<int> placementID, Nullable<int> projectID)
        {
            var placementIDParameter = placementID.HasValue ?
                new ObjectParameter("placementID", placementID) :
                new ObjectParameter("placementID", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("projectID", projectID) :
                new ObjectParameter("projectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllowancesEmployeePlacement_Result>("sp_getAllowancesEmployeePlacement", placementIDParameter, projectIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllPendingMinute_Result> sp_getAllPendingMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllPendingMinute_Result>("sp_getAllPendingMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllReadedION_Result> sp_getAllReadedION(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllReadedION_Result>("sp_getAllReadedION", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllTaxConfig_Result> sp_getAllTaxConfig()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllTaxConfig_Result>("sp_getAllTaxConfig");
        }
    
        public virtual ObjectResult<sp_getAllUsersData_Result> sp_getAllUsersData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllUsersData_Result>("sp_getAllUsersData");
        }
    
        public virtual ObjectResult<sp_getAssetbyDepartmentID_Result> sp_getAssetbyDepartmentID(Nullable<int> departmentID)
        {
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAssetbyDepartmentID_Result>("sp_getAssetbyDepartmentID", departmentIDParameter);
        }
    
        public virtual ObjectResult<sp_getAssetbyMinuteSubTypeID_Result> sp_getAssetbyMinuteSubTypeID(Nullable<int> departmentID, Nullable<int> typeID)
        {
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("typeID", typeID) :
                new ObjectParameter("typeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAssetbyMinuteSubTypeID_Result>("sp_getAssetbyMinuteSubTypeID", departmentIDParameter, typeIDParameter);
        }
    
        public virtual ObjectResult<sp_getAssetbyMinuteTypeandSubwise_Result> sp_getAssetbyMinuteTypeandSubwise(Nullable<int> typeID, Nullable<int> subtypeID)
        {
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("typeID", typeID) :
                new ObjectParameter("typeID", typeof(int));
    
            var subtypeIDParameter = subtypeID.HasValue ?
                new ObjectParameter("SubtypeID", subtypeID) :
                new ObjectParameter("SubtypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAssetbyMinuteTypeandSubwise_Result>("sp_getAssetbyMinuteTypeandSubwise", typeIDParameter, subtypeIDParameter);
        }
    
        public virtual ObjectResult<sp_getAssetbyMinuteTypeID_Result> sp_getAssetbyMinuteTypeID(Nullable<int> departmentID, Nullable<int> typeID)
        {
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("typeID", typeID) :
                new ObjectParameter("typeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAssetbyMinuteTypeID_Result>("sp_getAssetbyMinuteTypeID", departmentIDParameter, typeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_getcheckinfo(Nullable<int> eMPID, Nullable<int> mit)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            var mitParameter = mit.HasValue ?
                new ObjectParameter("mit", mit) :
                new ObjectParameter("mit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_getcheckinfo", eMPIDParameter, mitParameter);
        }
    
        public virtual ObjectResult<sp_getDayWisePendingMinute_Result> sp_getDayWisePendingMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getDayWisePendingMinute_Result>("sp_getDayWisePendingMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getDeductionEmployeePlacement_Result> sp_getDeductionEmployeePlacement(Nullable<int> placementID, Nullable<int> project)
        {
            var placementIDParameter = placementID.HasValue ?
                new ObjectParameter("placementID", placementID) :
                new ObjectParameter("placementID", typeof(int));
    
            var projectParameter = project.HasValue ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getDeductionEmployeePlacement_Result>("sp_getDeductionEmployeePlacement", placementIDParameter, projectParameter);
        }
    
        public virtual ObjectResult<sp_getDepartmentDaysWisePendingMinutes_Result> sp_getDepartmentDaysWisePendingMinutes(Nullable<int> departmentID, Nullable<int> minuteType)
        {
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("departmentID", departmentID) :
                new ObjectParameter("departmentID", typeof(int));
    
            var minuteTypeParameter = minuteType.HasValue ?
                new ObjectParameter("MinuteType", minuteType) :
                new ObjectParameter("MinuteType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getDepartmentDaysWisePendingMinutes_Result>("sp_getDepartmentDaysWisePendingMinutes", departmentIDParameter, minuteTypeParameter);
        }
    
        public virtual ObjectResult<sp_getDepartmentWiseMinteType_Result> sp_getDepartmentWiseMinteType(Nullable<int> departmentId)
        {
            var departmentIdParameter = departmentId.HasValue ?
                new ObjectParameter("departmentId", departmentId) :
                new ObjectParameter("departmentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getDepartmentWiseMinteType_Result>("sp_getDepartmentWiseMinteType", departmentIdParameter);
        }
    
        public virtual int sp_getEmployeeLoandata(string where)
        {
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getEmployeeLoandata", whereParameter);
        }
    
        public virtual ObjectResult<sp_getEmployeeLoandataClass_Result> sp_getEmployeeLoandataClass(string where)
        {
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getEmployeeLoandataClass_Result>("sp_getEmployeeLoandataClass", whereParameter);
        }
    
        public virtual ObjectResult<sp_getemployeePlacement_Result> sp_getemployeePlacement(string where)
        {
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getemployeePlacement_Result>("sp_getemployeePlacement", whereParameter);
        }
    
        public virtual int sp_getEmployeeSalarySlip(Nullable<int> departmentID, Nullable<int> projectID, Nullable<int> yaer, Nullable<int> month, Nullable<int> employeeID)
        {
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("projectID", projectID) :
                new ObjectParameter("projectID", typeof(int));
    
            var yaerParameter = yaer.HasValue ?
                new ObjectParameter("yaer", yaer) :
                new ObjectParameter("yaer", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("employeeID", employeeID) :
                new ObjectParameter("employeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_getEmployeeSalarySlip", departmentIDParameter, projectIDParameter, yaerParameter, monthParameter, employeeIDParameter);
        }
    
        public virtual ObjectResult<sp_getFiedAssetitems_Result> sp_getFiedAssetitems()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getFiedAssetitems_Result>("sp_getFiedAssetitems");
        }
    
        public virtual ObjectResult<sp_getFixedAssitlistMinute_Result> sp_getFixedAssitlistMinute(Nullable<int> projectId, Nullable<int> departmentID, Nullable<int> typeID, Nullable<int> typeSubID)
        {
            var projectIdParameter = projectId.HasValue ?
                new ObjectParameter("ProjectId", projectId) :
                new ObjectParameter("ProjectId", typeof(int));
    
            var departmentIDParameter = departmentID.HasValue ?
                new ObjectParameter("DepartmentID", departmentID) :
                new ObjectParameter("DepartmentID", typeof(int));
    
            var typeIDParameter = typeID.HasValue ?
                new ObjectParameter("typeID", typeID) :
                new ObjectParameter("typeID", typeof(int));
    
            var typeSubIDParameter = typeSubID.HasValue ?
                new ObjectParameter("typeSubID", typeSubID) :
                new ObjectParameter("typeSubID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getFixedAssitlistMinute_Result>("sp_getFixedAssitlistMinute", projectIdParameter, departmentIDParameter, typeIDParameter, typeSubIDParameter);
        }
    
        public virtual ObjectResult<sp_getGrphCompDatanew2_Result> sp_getGrphCompDatanew2(Nullable<int> depID, Nullable<System.DateTime> fUdate, Nullable<System.DateTime> tuDate)
        {
            var depIDParameter = depID.HasValue ?
                new ObjectParameter("DepID", depID) :
                new ObjectParameter("DepID", typeof(int));
    
            var fUdateParameter = fUdate.HasValue ?
                new ObjectParameter("FUdate", fUdate) :
                new ObjectParameter("FUdate", typeof(System.DateTime));
    
            var tuDateParameter = tuDate.HasValue ?
                new ObjectParameter("TuDate", tuDate) :
                new ObjectParameter("TuDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getGrphCompDatanew2_Result>("sp_getGrphCompDatanew2", depIDParameter, fUdateParameter, tuDateParameter);
        }
    
        public virtual ObjectResult<sp_getGrphCompDatanew3_Result> sp_getGrphCompDatanew3(Nullable<int> empID, Nullable<System.DateTime> fUdate, Nullable<System.DateTime> tuDate)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            var fUdateParameter = fUdate.HasValue ?
                new ObjectParameter("FUdate", fUdate) :
                new ObjectParameter("FUdate", typeof(System.DateTime));
    
            var tuDateParameter = tuDate.HasValue ?
                new ObjectParameter("TuDate", tuDate) :
                new ObjectParameter("TuDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getGrphCompDatanew3_Result>("sp_getGrphCompDatanew3", empIDParameter, fUdateParameter, tuDateParameter);
        }
    
        public virtual ObjectResult<sp_getGrphComplaintDatanew3_Result> sp_getGrphComplaintDatanew3(Nullable<int> depID, Nullable<System.DateTime> fUdate, Nullable<System.DateTime> tuDate, Nullable<int> empid)
        {
            var depIDParameter = depID.HasValue ?
                new ObjectParameter("DepID", depID) :
                new ObjectParameter("DepID", typeof(int));
    
            var fUdateParameter = fUdate.HasValue ?
                new ObjectParameter("FUdate", fUdate) :
                new ObjectParameter("FUdate", typeof(System.DateTime));
    
            var tuDateParameter = tuDate.HasValue ?
                new ObjectParameter("TuDate", tuDate) :
                new ObjectParameter("TuDate", typeof(System.DateTime));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getGrphComplaintDatanew3_Result>("sp_getGrphComplaintDatanew3", depIDParameter, fUdateParameter, tuDateParameter, empidParameter);
        }
    
        public virtual ObjectResult<sp_getGrphEmployeeData_Result> sp_getGrphEmployeeData(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getGrphEmployeeData_Result>("sp_getGrphEmployeeData", projectIDParameter);
        }
    
        public virtual ObjectResult<sp_getGrphMinuteData_Result> sp_getGrphMinuteData(Nullable<int> depID)
        {
            var depIDParameter = depID.HasValue ?
                new ObjectParameter("DepID", depID) :
                new ObjectParameter("DepID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getGrphMinuteData_Result>("sp_getGrphMinuteData", depIDParameter);
        }
    
        public virtual ObjectResult<sp_getGrphMinuteDatanew_Result> sp_getGrphMinuteDatanew(Nullable<int> depID, Nullable<System.DateTime> fUdate, Nullable<System.DateTime> tuDate)
        {
            var depIDParameter = depID.HasValue ?
                new ObjectParameter("DepID", depID) :
                new ObjectParameter("DepID", typeof(int));
    
            var fUdateParameter = fUdate.HasValue ?
                new ObjectParameter("FUdate", fUdate) :
                new ObjectParameter("FUdate", typeof(System.DateTime));
    
            var tuDateParameter = tuDate.HasValue ?
                new ObjectParameter("TuDate", tuDate) :
                new ObjectParameter("TuDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getGrphMinuteDatanew_Result>("sp_getGrphMinuteDatanew", depIDParameter, fUdateParameter, tuDateParameter);
        }
    
        public virtual ObjectResult<sp_getGrphMinuteDatanew2_Result> sp_getGrphMinuteDatanew2(Nullable<int> depID, Nullable<System.DateTime> fUdate, Nullable<System.DateTime> tuDate)
        {
            var depIDParameter = depID.HasValue ?
                new ObjectParameter("DepID", depID) :
                new ObjectParameter("DepID", typeof(int));
    
            var fUdateParameter = fUdate.HasValue ?
                new ObjectParameter("FUdate", fUdate) :
                new ObjectParameter("FUdate", typeof(System.DateTime));
    
            var tuDateParameter = tuDate.HasValue ?
                new ObjectParameter("TuDate", tuDate) :
                new ObjectParameter("TuDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getGrphMinuteDatanew2_Result>("sp_getGrphMinuteDatanew2", depIDParameter, fUdateParameter, tuDateParameter);
        }
    
        public virtual ObjectResult<sp_getGrphMinuteDatanew3_Result> sp_getGrphMinuteDatanew3(Nullable<int> depID, Nullable<System.DateTime> fUdate, Nullable<System.DateTime> tuDate, Nullable<int> empid)
        {
            var depIDParameter = depID.HasValue ?
                new ObjectParameter("DepID", depID) :
                new ObjectParameter("DepID", typeof(int));
    
            var fUdateParameter = fUdate.HasValue ?
                new ObjectParameter("FUdate", fUdate) :
                new ObjectParameter("FUdate", typeof(System.DateTime));
    
            var tuDateParameter = tuDate.HasValue ?
                new ObjectParameter("TuDate", tuDate) :
                new ObjectParameter("TuDate", typeof(System.DateTime));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getGrphMinuteDatanew3_Result>("sp_getGrphMinuteDatanew3", depIDParameter, fUdateParameter, tuDateParameter, empidParameter);
        }
    
        public virtual ObjectResult<sp_getheckforMinOwner_Result> sp_getheckforMinOwner(string minCode, Nullable<int> mT)
        {
            var minCodeParameter = minCode != null ?
                new ObjectParameter("minCode", minCode) :
                new ObjectParameter("minCode", typeof(string));
    
            var mTParameter = mT.HasValue ?
                new ObjectParameter("mT", mT) :
                new ObjectParameter("mT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getheckforMinOwner_Result>("sp_getheckforMinOwner", minCodeParameter, mTParameter);
        }
    
        public virtual ObjectResult<sp_getIonOwner_Result> sp_getIonOwner(string ionCode, Nullable<int> mT)
        {
            var ionCodeParameter = ionCode != null ?
                new ObjectParameter("IonCode", ionCode) :
                new ObjectParameter("IonCode", typeof(string));
    
            var mTParameter = mT.HasValue ?
                new ObjectParameter("mT", mT) :
                new ObjectParameter("mT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getIonOwner_Result>("sp_getIonOwner", ionCodeParameter, mTParameter);
        }
    
        public virtual ObjectResult<sp_GetMinuteEmployee_Result> sp_GetMinuteEmployee(Nullable<int> employeeID, Nullable<int> projectID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("projectID", projectID) :
                new ObjectParameter("projectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetMinuteEmployee_Result>("sp_GetMinuteEmployee", employeeIDParameter, projectIDParameter);
        }
    
        public virtual ObjectResult<sp_GetMinuteEmployeeCC_Result> sp_GetMinuteEmployeeCC(string employeeID, Nullable<int> projectID)
        {
            var employeeIDParameter = employeeID != null ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(string));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("projectID", projectID) :
                new ObjectParameter("projectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetMinuteEmployeeCC_Result>("sp_GetMinuteEmployeeCC", employeeIDParameter, projectIDParameter);
        }
    
        public virtual ObjectResult<sp_GetMinuteEmployeeCCC_Result> sp_GetMinuteEmployeeCCC(Nullable<int> employeeID, Nullable<int> employeeID2, Nullable<int> projectID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var employeeID2Parameter = employeeID2.HasValue ?
                new ObjectParameter("EmployeeID2", employeeID2) :
                new ObjectParameter("EmployeeID2", typeof(int));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("projectID", projectID) :
                new ObjectParameter("projectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetMinuteEmployeeCCC_Result>("sp_GetMinuteEmployeeCCC", employeeIDParameter, employeeID2Parameter, projectIDParameter);
        }
    
        public virtual ObjectResult<sp_getminuteSubtype_Result> sp_getminuteSubtype(string where)
        {
            var whereParameter = where != null ?
                new ObjectParameter("where", where) :
                new ObjectParameter("where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getminuteSubtype_Result>("sp_getminuteSubtype", whereParameter);
        }
    
        public virtual ObjectResult<sp_getMonthSalary_Result> sp_getMonthSalary(Nullable<int> month, Nullable<int> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getMonthSalary_Result>("sp_getMonthSalary", monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_getnewAllApprovedComptaint_Result> sp_getnewAllApprovedComptaint(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getnewAllApprovedComptaint_Result>("sp_getnewAllApprovedComptaint", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getnewAllApprovedMinute_Result> sp_getnewAllApprovedMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getnewAllApprovedMinute_Result>("sp_getnewAllApprovedMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getnewAllCancelComptaint_Result> sp_getnewAllCancelComptaint(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getnewAllCancelComptaint_Result>("sp_getnewAllCancelComptaint", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getnewAllCancelMinute_Result> sp_getnewAllCancelMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getnewAllCancelMinute_Result>("sp_getnewAllCancelMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getnewAllCompletedComptaint_Result> sp_getnewAllCompletedComptaint(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getnewAllCompletedComptaint_Result>("sp_getnewAllCompletedComptaint", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getnewAllCompletedMinute_Result> sp_getnewAllCompletedMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getnewAllCompletedMinute_Result>("sp_getnewAllCompletedMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getnewAllForInfoComptaint_Result> sp_getnewAllForInfoComptaint(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getnewAllForInfoComptaint_Result>("sp_getnewAllForInfoComptaint", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getnewAllForInfoMinute_Result> sp_getnewAllForInfoMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getnewAllForInfoMinute_Result>("sp_getnewAllForInfoMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getnewAllIONMinute_Result> sp_getnewAllIONMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getnewAllIONMinute_Result>("sp_getnewAllIONMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getnewAllNewComptaint_Result> sp_getnewAllNewComptaint(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getnewAllNewComptaint_Result>("sp_getnewAllNewComptaint", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getnewAllNewMinute_Result> sp_getnewAllNewMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getnewAllNewMinute_Result>("sp_getnewAllNewMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getnewAllPendingComptaint_Result> sp_getnewAllPendingComptaint(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getnewAllPendingComptaint_Result>("sp_getnewAllPendingComptaint", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getnewAllPendingMinute_Result> sp_getnewAllPendingMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getnewAllPendingMinute_Result>("sp_getnewAllPendingMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getPresidentnewAllMinute_Result> sp_getPresidentnewAllMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getPresidentnewAllMinute_Result>("sp_getPresidentnewAllMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getPrintPresidentnewAllMinute_Result> sp_getPrintPresidentnewAllMinute(Nullable<int> eMPID, string eminuteIds)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            var eminuteIdsParameter = eminuteIds != null ?
                new ObjectParameter("EminuteIds", eminuteIds) :
                new ObjectParameter("EminuteIds", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getPrintPresidentnewAllMinute_Result>("sp_getPrintPresidentnewAllMinute", eMPIDParameter, eminuteIdsParameter);
        }
    
        public virtual ObjectResult<sp_getRanking_Result> sp_getRanking()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getRanking_Result>("sp_getRanking");
        }
    
        public virtual ObjectResult<sp_getReportComplaint_Result> sp_getReportComplaint(Nullable<int> eMPID, Nullable<int> statusofQuery, Nullable<int> departmentid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            var statusofQueryParameter = statusofQuery.HasValue ?
                new ObjectParameter("statusofQuery", statusofQuery) :
                new ObjectParameter("statusofQuery", typeof(int));
    
            var departmentidParameter = departmentid.HasValue ?
                new ObjectParameter("departmentid", departmentid) :
                new ObjectParameter("departmentid", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getReportComplaint_Result>("sp_getReportComplaint", eMPIDParameter, statusofQueryParameter, departmentidParameter, fromdateParameter, todateParameter);
        }
    
        public virtual ObjectResult<sp_getReportMinutes_Result> sp_getReportMinutes(Nullable<int> eMPID, Nullable<int> statusofQuery, Nullable<int> departmentid, Nullable<System.DateTime> fromdate, Nullable<System.DateTime> todate, Nullable<int> type, Nullable<int> subtype)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            var statusofQueryParameter = statusofQuery.HasValue ?
                new ObjectParameter("statusofQuery", statusofQuery) :
                new ObjectParameter("statusofQuery", typeof(int));
    
            var departmentidParameter = departmentid.HasValue ?
                new ObjectParameter("departmentid", departmentid) :
                new ObjectParameter("departmentid", typeof(int));
    
            var fromdateParameter = fromdate.HasValue ?
                new ObjectParameter("fromdate", fromdate) :
                new ObjectParameter("fromdate", typeof(System.DateTime));
    
            var todateParameter = todate.HasValue ?
                new ObjectParameter("todate", todate) :
                new ObjectParameter("todate", typeof(System.DateTime));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var subtypeParameter = subtype.HasValue ?
                new ObjectParameter("subtype", subtype) :
                new ObjectParameter("subtype", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getReportMinutes_Result>("sp_getReportMinutes", eMPIDParameter, statusofQueryParameter, departmentidParameter, fromdateParameter, todateParameter, typeParameter, subtypeParameter);
        }
    
        public virtual ObjectResult<sp_getSalaryExist_Result> sp_getSalaryExist(Nullable<int> month, Nullable<int> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getSalaryExist_Result>("sp_getSalaryExist", monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_GetUserRightByUser_Result> sp_GetUserRightByUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetUserRightByUser_Result>("sp_GetUserRightByUser", userIDParameter);
        }
    
        public virtual ObjectResult<sp_GLUserGroupDetail_Result> sp_GLUserGroupDetail(Nullable<int> groupID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GLUserGroupDetail_Result>("sp_GLUserGroupDetail", groupIDParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_InsertLogEmployeePlacementAllowancesDetail(Nullable<int> placementID)
        {
            var placementIDParameter = placementID.HasValue ?
                new ObjectParameter("PlacementID", placementID) :
                new ObjectParameter("PlacementID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertLogEmployeePlacementAllowancesDetail", placementIDParameter);
        }
    
        public virtual int SP_InsertLogEmployeePlacementDeductionDetail(Nullable<int> placementID)
        {
            var placementIDParameter = placementID.HasValue ?
                new ObjectParameter("PlacementID", placementID) :
                new ObjectParameter("PlacementID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertLogEmployeePlacementDeductionDetail", placementIDParameter);
        }
    
        public virtual ObjectResult<sp_minutePrint_Result> sp_minutePrint(string minutecode)
        {
            var minutecodeParameter = minutecode != null ?
                new ObjectParameter("minutecode", minutecode) :
                new ObjectParameter("minutecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_minutePrint_Result>("sp_minutePrint", minutecodeParameter);
        }
    
        public virtual ObjectResult<sp_MinutesPettyCash_View_Result> sp_MinutesPettyCash_View()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MinutesPettyCash_View_Result>("sp_MinutesPettyCash_View");
        }
    
        public virtual ObjectResult<Nullable<int>> sp_NextNO(Nullable<int> minTyep)
        {
            var minTyepParameter = minTyep.HasValue ?
                new ObjectParameter("minTyep", minTyep) :
                new ObjectParameter("minTyep", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_NextNO", minTyepParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_NextNOION(Nullable<int> minTyep)
        {
            var minTyepParameter = minTyep.HasValue ?
                new ObjectParameter("minTyep", minTyep) :
                new ObjectParameter("minTyep", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_NextNOION", minTyepParameter);
        }
    
        public virtual ObjectResult<sp_PettyCashMinutes_EditView_Result> sp_PettyCashMinutes_EditView(string minutecode)
        {
            var minutecodeParameter = minutecode != null ?
                new ObjectParameter("minutecode", minutecode) :
                new ObjectParameter("minutecode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PettyCashMinutes_EditView_Result>("sp_PettyCashMinutes_EditView", minutecodeParameter);
        }
    
        public virtual ObjectResult<sp_PoAllowedMinuteReport_Result> sp_PoAllowedMinuteReport(Nullable<int> departmentid, Nullable<int> type, Nullable<int> subtype, string search)
        {
            var departmentidParameter = departmentid.HasValue ?
                new ObjectParameter("departmentid", departmentid) :
                new ObjectParameter("departmentid", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var subtypeParameter = subtype.HasValue ?
                new ObjectParameter("subtype", subtype) :
                new ObjectParameter("subtype", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PoAllowedMinuteReport_Result>("sp_PoAllowedMinuteReport", departmentidParameter, typeParameter, subtypeParameter, searchParameter);
        }
    
        public virtual ObjectResult<sp_RemaingLoancheck_Result> sp_RemaingLoancheck(Nullable<int> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RemaingLoancheck_Result>("sp_RemaingLoancheck", projectIDParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<sp_searchMinuteReport_Result> sp_searchMinuteReport(Nullable<int> departmentid, Nullable<int> type, Nullable<int> subtype, string search)
        {
            var departmentidParameter = departmentid.HasValue ?
                new ObjectParameter("departmentid", departmentid) :
                new ObjectParameter("departmentid", typeof(int));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var subtypeParameter = subtype.HasValue ?
                new ObjectParameter("subtype", subtype) :
                new ObjectParameter("subtype", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_searchMinuteReport_Result>("sp_searchMinuteReport", departmentidParameter, typeParameter, subtypeParameter, searchParameter);
        }
    
        public virtual int sp_sendIonallemployee()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sendIonallemployee");
        }
    
        public virtual int sp_sendIonallemployeeMerged()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sendIonallemployeeMerged");
        }
    
        public virtual int sp_SendmsgForNewPending()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_SendmsgForNewPending");
        }
    
        public virtual ObjectResult<sp_TopRanking10_Result> sp_TopRanking10()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_TopRanking10_Result>("sp_TopRanking10");
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> GetSignCount(string minCode)
        {
            var minCodeParameter = minCode != null ?
                new ObjectParameter("minCode", minCode) :
                new ObjectParameter("minCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetSignCount", minCodeParameter);
        }
    
        public virtual ObjectResult<sp_AllBoardPerson_Result> sp_AllBoardPerson(string minutesheetcode)
        {
            var minutesheetcodeParameter = minutesheetcode != null ?
                new ObjectParameter("minutesheetcode", minutesheetcode) :
                new ObjectParameter("minutesheetcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AllBoardPerson_Result>("sp_AllBoardPerson", minutesheetcodeParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> sp_CheckSign_BoardSheet(string minuteSheetCode, Nullable<int> employeeID)
        {
            var minuteSheetCodeParameter = minuteSheetCode != null ?
                new ObjectParameter("MinuteSheetCode", minuteSheetCode) :
                new ObjectParameter("MinuteSheetCode", typeof(string));
    
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("sp_CheckSign_BoardSheet", minuteSheetCodeParameter, employeeIDParameter);
        }
    
        public virtual ObjectResult<sp_EditForBoard_Result> sp_EditForBoard(Nullable<int> eMPID, Nullable<int> mit)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            var mitParameter = mit.HasValue ?
                new ObjectParameter("mit", mit) :
                new ObjectParameter("mit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EditForBoard_Result>("sp_EditForBoard", eMPIDParameter, mitParameter);
        }
    
        public virtual ObjectResult<sp_EmployeeName_Board_Result> sp_EmployeeName_Board(string code)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EmployeeName_Board_Result>("sp_EmployeeName_Board", codeParameter);
        }
    
        public virtual ObjectResult<sp_getAllBoardMinute_Result> sp_getAllBoardMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllBoardMinute_Result>("sp_getAllBoardMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllBoardToEdit_Result> sp_getAllBoardToEdit(Nullable<int> empid, string code, Nullable<int> ty)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var tyParameter = ty.HasValue ?
                new ObjectParameter("ty", ty) :
                new ObjectParameter("ty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllBoardToEdit_Result>("sp_getAllBoardToEdit", empidParameter, codeParameter, tyParameter);
        }
    
        public virtual ObjectResult<sp_getBoardOwner_Result> sp_getBoardOwner(string minuteSheetCode, Nullable<int> mT)
        {
            var minuteSheetCodeParameter = minuteSheetCode != null ?
                new ObjectParameter("MinuteSheetCode", minuteSheetCode) :
                new ObjectParameter("MinuteSheetCode", typeof(string));
    
            var mTParameter = mT.HasValue ?
                new ObjectParameter("mT", mT) :
                new ObjectParameter("mT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getBoardOwner_Result>("sp_getBoardOwner", minuteSheetCodeParameter, mTParameter);
        }
    
        public virtual ObjectResult<sp_GetBoardSheet_Result> sp_GetBoardSheet(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetBoardSheet_Result>("sp_GetBoardSheet", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_GetReadedBoardSheet_Result> sp_GetReadedBoardSheet(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetReadedBoardSheet_Result>("sp_GetReadedBoardSheet", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_GetRelatedMinutePerson_Result> sp_GetRelatedMinutePerson(string minutesheetcode)
        {
            var minutesheetcodeParameter = minutesheetcode != null ?
                new ObjectParameter("minutesheetcode", minutesheetcode) :
                new ObjectParameter("minutesheetcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetRelatedMinutePerson_Result>("sp_GetRelatedMinutePerson", minutesheetcodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_NextProceedingNumber(Nullable<int> minTyep)
        {
            var minTyepParameter = minTyep.HasValue ?
                new ObjectParameter("minTyep", minTyep) :
                new ObjectParameter("minTyep", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_NextProceedingNumber", minTyepParameter);
        }
    
        public virtual ObjectResult<sp_RelatedPerson_OrderWIse_Result> sp_RelatedPerson_OrderWIse(string minutesheetcode)
        {
            var minutesheetcodeParameter = minutesheetcode != null ?
                new ObjectParameter("minutesheetcode", minutesheetcode) :
                new ObjectParameter("minutesheetcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_RelatedPerson_OrderWIse_Result>("sp_RelatedPerson_OrderWIse", minutesheetcodeParameter);
        }
    
        public virtual int sp_sendIonallemployee1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sendIonallemployee1");
        }
    
        public virtual int sp_sendIonallemployeeMerged1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sendIonallemployeeMerged1");
        }
    
        public virtual ObjectResult<string> sp_viewedEmployees(Nullable<int> ionid)
        {
            var ionidParameter = ionid.HasValue ?
                new ObjectParameter("ionid", ionid) :
                new ObjectParameter("ionid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_viewedEmployees", ionidParameter);
        }
    
        public virtual ObjectResult<sp_GetServiceGraph_Result> sp_GetServiceGraph(Nullable<int> depID, string fUdate, string tuDate, Nullable<int> projID, string type, string relTo)
        {
            var depIDParameter = depID.HasValue ?
                new ObjectParameter("DepID", depID) :
                new ObjectParameter("DepID", typeof(int));
    
            var fUdateParameter = fUdate != null ?
                new ObjectParameter("FUdate", fUdate) :
                new ObjectParameter("FUdate", typeof(string));
    
            var tuDateParameter = tuDate != null ?
                new ObjectParameter("TuDate", tuDate) :
                new ObjectParameter("TuDate", typeof(string));
    
            var projIDParameter = projID.HasValue ?
                new ObjectParameter("projID", projID) :
                new ObjectParameter("projID", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var relToParameter = relTo != null ?
                new ObjectParameter("RelTo", relTo) :
                new ObjectParameter("RelTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetServiceGraph_Result>("sp_GetServiceGraph", depIDParameter, fUdateParameter, tuDateParameter, projIDParameter, typeParameter, relToParameter);
        }
    
        public virtual ObjectResult<sp_ReportService_Result> sp_ReportService(string status, Nullable<System.DateTime> datefrom, Nullable<System.DateTime> dateto, string deptid, string type)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var datefromParameter = datefrom.HasValue ?
                new ObjectParameter("datefrom", datefrom) :
                new ObjectParameter("datefrom", typeof(System.DateTime));
    
            var datetoParameter = dateto.HasValue ?
                new ObjectParameter("dateto", dateto) :
                new ObjectParameter("dateto", typeof(System.DateTime));
    
            var deptidParameter = deptid != null ?
                new ObjectParameter("deptid", deptid) :
                new ObjectParameter("deptid", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReportService_Result>("sp_ReportService", statusParameter, datefromParameter, datetoParameter, deptidParameter, typeParameter);
        }
    
        public virtual ObjectResult<sp_getSerivelogdetail_Result> sp_getSerivelogdetail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getSerivelogdetail_Result>("sp_getSerivelogdetail");
        }
    
        public virtual ObjectResult<sp_getSerivelogdetailviewlist_Result> sp_getSerivelogdetailviewlist()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getSerivelogdetailviewlist_Result>("sp_getSerivelogdetailviewlist");
        }
    
        public virtual ObjectResult<sp_allServices_Result> sp_allServices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_allServices_Result>("sp_allServices");
        }
    
        public virtual ObjectResult<Nullable<bool>> CheckUserSignStatus(string minuteSheetCode, Nullable<int> empid)
        {
            var minuteSheetCodeParameter = minuteSheetCode != null ?
                new ObjectParameter("MinuteSheetCode", minuteSheetCode) :
                new ObjectParameter("MinuteSheetCode", typeof(string));
    
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("CheckUserSignStatus", minuteSheetCodeParameter, empidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetSignCount1(string minuteSheetCode)
        {
            var minuteSheetCodeParameter = minuteSheetCode != null ?
                new ObjectParameter("MinuteSheetCode", minuteSheetCode) :
                new ObjectParameter("MinuteSheetCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetSignCount1", minuteSheetCodeParameter);
        }
    
        public virtual ObjectResult<sp_getAllkpitoEdit_Result> sp_getAllkpitoEdit(Nullable<int> empid, string code)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllkpitoEdit_Result>("sp_getAllkpitoEdit", empidParameter, codeParameter);
        }
    
        public virtual ObjectResult<sp_getAllkpl_Result> sp_getAllkpl(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllkpl_Result>("sp_getAllkpl", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getkpiOwner_Result> sp_getkpiOwner(string kpicode)
        {
            var kpicodeParameter = kpicode != null ?
                new ObjectParameter("kpicode", kpicode) :
                new ObjectParameter("kpicode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getkpiOwner_Result>("sp_getkpiOwner", kpicodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_NextKplNumber()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_NextKplNumber");
        }
    
        public virtual ObjectResult<sp_getnewAllPurchaseMinute_Result> sp_getnewAllPurchaseMinute(Nullable<int> eMPID)
        {
            var eMPIDParameter = eMPID.HasValue ?
                new ObjectParameter("EMPID", eMPID) :
                new ObjectParameter("EMPID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getnewAllPurchaseMinute_Result>("sp_getnewAllPurchaseMinute", eMPIDParameter);
        }
    
        public virtual ObjectResult<sp_getAllkplData_Result> sp_getAllkplData(Nullable<int> dEPID, Nullable<int> pROJID)
        {
            var dEPIDParameter = dEPID.HasValue ?
                new ObjectParameter("DEPID", dEPID) :
                new ObjectParameter("DEPID", typeof(int));
    
            var pROJIDParameter = pROJID.HasValue ?
                new ObjectParameter("PROJID", pROJID) :
                new ObjectParameter("PROJID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllkplData_Result>("sp_getAllkplData", dEPIDParameter, pROJIDParameter);
        }
    }
}
