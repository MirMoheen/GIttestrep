//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HRandPayrollSystemModel.InventryModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InventoryEntities : DbContext
    {
        public InventoryEntities()
            : base("name=InventoryEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_AddBudget> tbl_AddBudget { get; set; }
        public virtual DbSet<tbl_Costcenter> tbl_Costcenter { get; set; }
        public virtual DbSet<tbl_Costcenterbudgetheadamount> tbl_Costcenterbudgetheadamount { get; set; }
        public virtual DbSet<tbl_Costcenterbudgetheads> tbl_Costcenterbudgetheads { get; set; }
        public virtual DbSet<projecttbl> projecttbls { get; set; }
        public virtual DbSet<tblpo> tblpoes { get; set; }
    
        public virtual ObjectResult<sp_getAllfinyearForEminute_Result> sp_getAllfinyearForEminute()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_getAllfinyearForEminute_Result>("sp_getAllfinyearForEminute");
        }
    
        public virtual ObjectResult<Get_FinYears_Result> Get_FinYears(string hospcode)
        {
            var hospcodeParameter = hospcode != null ?
                new ObjectParameter("hospcode", hospcode) :
                new ObjectParameter("hospcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_FinYears_Result>("Get_FinYears", hospcodeParameter);
        }
    
        public virtual ObjectResult<Alshifa_jv_Desc_Fill2_Result> Alshifa_jv_Desc_Fill2(string ledgerYear)
        {
            var ledgerYearParameter = ledgerYear != null ?
                new ObjectParameter("LedgerYear", ledgerYear) :
                new ObjectParameter("LedgerYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Alshifa_jv_Desc_Fill2_Result>("Alshifa_jv_Desc_Fill2", ledgerYearParameter);
        }
    
        public virtual ObjectResult<Alshifa_jv_Desc_Fill_Result> Alshifa_jv_Desc_Fill(string ledgerYear)
        {
            var ledgerYearParameter = ledgerYear != null ?
                new ObjectParameter("LedgerYear", ledgerYear) :
                new ObjectParameter("LedgerYear", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Alshifa_jv_Desc_Fill_Result>("Alshifa_jv_Desc_Fill", ledgerYearParameter);
        }
    
        public virtual ObjectResult<Get_BudgetFinYears_Result> Get_BudgetFinYears(string hospcode)
        {
            var hospcodeParameter = hospcode != null ?
                new ObjectParameter("hospcode", hospcode) :
                new ObjectParameter("hospcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_BudgetFinYears_Result>("Get_BudgetFinYears", hospcodeParameter);
        }
    
        public virtual ObjectResult<sp_budgetSummryForEminute_Result> sp_budgetSummryForEminute(Nullable<int> project, Nullable<int> head, Nullable<int> subhead)
        {
            var projectParameter = project.HasValue ?
                new ObjectParameter("project", project) :
                new ObjectParameter("project", typeof(int));
    
            var headParameter = head.HasValue ?
                new ObjectParameter("Head", head) :
                new ObjectParameter("Head", typeof(int));
    
            var subheadParameter = subhead.HasValue ?
                new ObjectParameter("subhead", subhead) :
                new ObjectParameter("subhead", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_budgetSummryForEminute_Result>("sp_budgetSummryForEminute", projectParameter, headParameter, subheadParameter);
        }
    
        public virtual ObjectResult<budgetHeadLedger_Result> budgetHeadLedger(string headid, string subHeadID, string startDate, string endDate, Nullable<int> fy)
        {
            var headidParameter = headid != null ?
                new ObjectParameter("headid", headid) :
                new ObjectParameter("headid", typeof(string));
    
            var subHeadIDParameter = subHeadID != null ?
                new ObjectParameter("subHeadID", subHeadID) :
                new ObjectParameter("subHeadID", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            var fyParameter = fy.HasValue ?
                new ObjectParameter("fy", fy) :
                new ObjectParameter("fy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<budgetHeadLedger_Result>("budgetHeadLedger", headidParameter, subHeadIDParameter, startDateParameter, endDateParameter, fyParameter);
        }
    
        public virtual ObjectResult<getBudgetProvisionamount_Result> getBudgetProvisionamount(string head, string subHead, string fy)
        {
            var headParameter = head != null ?
                new ObjectParameter("head", head) :
                new ObjectParameter("head", typeof(string));
    
            var subHeadParameter = subHead != null ?
                new ObjectParameter("subHead", subHead) :
                new ObjectParameter("subHead", typeof(string));
    
            var fyParameter = fy != null ?
                new ObjectParameter("fy", fy) :
                new ObjectParameter("fy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getBudgetProvisionamount_Result>("getBudgetProvisionamount", headParameter, subHeadParameter, fyParameter);
        }
    }
}
